.problem {
    list-style: none;
    margin: auto;
    margin-bottom: 30px;
    position: relative;

    .tile {
        background-color: #fafafa;
        display: flex;
        flex-direction: row;

        .navItemButton {
            padding-top: 24px;
            flex: 1;
            height: 100%;
            margin: auto;
        }
    }

    >a {
        box-sizing: border-box;
        padding-bottom: 2.5rem;
        // display: flex;
        // flex-direction: column;

        >.navItemContent {
            padding: 0 1.25rem;
            max-height: 100%;
            // position: absolute;
            // width: 100%;
        }
    }
}

.navItemButton {
    cursor: pointer;
    overflow-y: auto;
    border: none;
    text-align: left;
    text-decoration: none;
}

.colorInherit {
    background-color: inherit;
}

.problemAnnotation,
.problemAnnotationScaled {
    word-wrap: break-word;
    display: block;
    text-align: center;
    cursor: pointer;
    margin-bottom: 2ex;
}

.problemAnnotationScaled {
    font-size: 1.15em;
    margin-top: -1ex;
}

.trashIcon {
    position: relative;
    bottom: 2px;
}

.plusIcon {
    // left: 95%;
}

.editIcon {
    // left: 83%;
}

.imgIcon {
    // left: 93%;
}

.navSpan {
    position: relative;
}

.image {
    width: 260px;
    margin-top: 15px;
}

.middle {
    vertical-align: middle;
    width: 300px;
    display: table-cell;
}

.navItemContent {
    align-items: center;
    display: flex;

    &.emptyOverflow {
        height: 56px;
    }
}

.equation {
    min-height: 50px;
    display: block;
    text-align: center;
    // align-items: center;
    // justify-content: center;
    overflow: hidden;
}

.equationOverflownHorizontally {
    justify-content: flex-start;

    :global(.ML__mathlive) {
        line-height: unset;
        white-space: unset;
        width: 90%;

        :global(.ML__text) {
            white-space: break-spaces;
        }
    }
}

.equationOverflownVertically {
    align-items: flex-start;
}

.contentOverflownHorizontally {
    flex-direction: row;
}

.contentOverflownVertically {
    flex-direction: column;
}

// button {
//     &.container {
//         padding: 10px 15px 25px 15px;
//     }
// }

.problem {
    .btnContainer {
        position: absolute;
        text-align: right;
        bottom: 1px;
        right: 4px;
        padding: 0;

        >span {
            padding-left: 10px;
        }
    }

    :global(.dropdown) {
        > ul {
            min-width: 12rem;
            padding: 0;

            > li {
                > button {
                    padding: 5px;
                    text-align: left;
                    width: 100%;
                    .text {
                        vertical-align: super;
                    }
                    :global(.fa) {
                        padding-right: 10px;
                        width: 40px;
                    }
                }
            }
        }
    }

}
